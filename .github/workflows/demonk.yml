name: Demonk

on:
  pull_request:
    branches: 
      - develop
  push:
    tags: 
      - '*'
  workflow_dispatch:

env:
  CAMINHO_PROJETO_TESTES: ./Devmonk.API.Tests
  CAMINHO_PROJETO: ./Devmonk.API/Demonk.API.csproj
  NUGET_SERVER: https://api.nuget.org/v3/index.json

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK '5.0.x' 
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
  tests:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET 5
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.102

    - name: Testes com .NET 5 + xUnit + Fluent Assertions + Coverlet
      run: dotnet test ${{ env.CAMINHO_PROJETO_TESTES }} --verbosity minimal --logger:"html;LogFileName=resultado-testes.html" --collect:"XPlat Code Coverage"

    - name: Instalar ReportGenerator
      if: success()
      run: dotnet tool install --global dotnet-reportgenerator-globaltool --version 4.8.4
  
    - name: Gerar relat贸rio de cobertura de testes com ReportGenerator
      if: success()
      run: |
        cd ${{ env.CAMINHO_PROJETO_TESTES }}/TestResults
        # Acessar diret贸rio gerado com o XML de Cobertura de c贸digo
        cd $(ls -d */|head -n 1)
        reportgenerator "-reports:coverage.cobertura.xml" "-targetdir:coveragereport" -reporttypes:Html
    - name: Upload como Artifact dos Reports de Resultado de Testes Executados com Sucesso + Cobertura de C贸digo
      uses: actions/upload-artifact@v2.2.2
      env:
        CAMINHO_RESULTADO_TESTES: ${{ env.CAMINHO_PROJETO_TESTES }}/TestResults/
      if: success()
      with:
        name: resultado-testes
        path: ${{ env.CAMINHO_RESULTADO_TESTES }}
        retention-days: 30

    - name: Upload como Artifact do Report de Testes com Falhas
      uses: actions/upload-artifact@v2.2.2
      if: failure()
      env:
        CAMINHO_RELATORIO_ERROS: ${{ env.CAMINHO_PROJETO_TESTES }}/TestResults/resultado-testes.html
      with:
        name: resultado-erros-testes
        path: ${{ env.CAMINHO_RELATORIO_ERROS }}
        retention-days: 30
    
  sonar:
    needs: [build]
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"saulooliveira_devmonk" /o:"saulooliveira" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet restore
          dotnet build --configuration Release --no-restore
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
